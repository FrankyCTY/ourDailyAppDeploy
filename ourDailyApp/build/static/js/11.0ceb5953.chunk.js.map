{"version":3,"sources":["games/Pig_game/pigGamePageWithSpinner.style.jsx","firebase/firestore/getData.js","redux/pigGame/pigGame.selectors.js","games/Pig_game/pigGamePage.style.jsx","utils/conditional.js","redux/pigGamePlayer2/pigGamePlayer2.selectors.js","redux/Auth/auth.selectors.js","games/Pig_game/pigGamePage.component.jsx","games/Pig_game/pigGamePageWithSpinner.component.jsx"],"names":["S","face","css","props","theme","pigGamePage","preloader_bg","Container","styled","div","Dice","Face_front","Face_left","Face_right","Face_back","getPigGameState","a","docRef","firestore","collection","doc","get","docSnapShot","exists","console","log","data","getPigGamePlayer2State","docSnapshot","selectPigGameReducer","state","pigGame","selectDiceNumber","createSelector","diceNumber","selectActivePlayer","activePlayer","selectPlayer1Obj","player1","selectPlayer2Obj","player2","selectWinner","winner","selectFinalScore","finalScore","selectIsLoading","isLoading","selectStrikes","strikes","panelStyles","panel_bg","activePanel_bg","dot_color","btnStyles","signInOutBtnStyles","playerLogInBtn_primary","PlayerLogInBtn_secondary","strikesStyles","strikeAnimation","rotateDeg","keyframes","PigGameContainer","ModalsContainer","Player2SignInBtn","button","Player2SignOutBtn","InfoBtn","InfoIcon","i","playerIcon","GameConsoleContainer","PlayerOnePanel","PlayerTwoPanel","StrikeIcon","Player1Strikes","h2","Player2Strikes","PlayerInfoContainer","PlayerPic","imgsrc","PlayerName","fontSize","TotalScore","totalScore","CurrentScoreContainer","current_container","CurrentSpan","span","CurrentScore","h3","NewGameBtn","RollDiceBtn","HoldBtn","CrownLeft","CrownRight","TargetInput","input","targetInput_border","img","renderProfilePicture","photoURL","selectPigGamePlayer2Reducer","pigGamePlayer2","selectPlayer2DisplayName","displayName","selectPlayer2PhotoURL","selectIsLogged","isLogged","selectAuth","auth","selectCurrentUser","authReducer","currentUser","mapStateToProps","signUpAlert","logInAlert","createStructuredSelector","isPlayer2Logged","strikesNum","connect","dispatch","rollDice","holdDice","startNewGame","changeFinalScore","newFinalScore","toggleSignInModal","toggleInfoModal","signOutStart","isMainUserLogged","className","onClick","aria-hidden","xlinkHref","id","currentScore","type","placeholder","value","onChange","event","parseInt","target","src","loadGameState","gameState","loadPlayer2State","player2State","loadingIsFinished","setIsLoadingToTrue","useEffect","gamePlayer2State","loadGame"],"mappings":"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","file":"static/js/11.0ceb5953.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst S = {};\r\n\r\nconst face = css`\r\n  font-size: clamp(0.7rem, 1.4vw, 1.4rem);\r\n  background-color: white;\r\n  height: 10em;\r\n  width: 10em;\r\n  border: 7px solid ${(props) => props.theme.pigGamePage.preloader_bg};\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n\r\n  & > div {\r\n    font-size: clamp(0.7rem, 1.4vw, 1.4rem);\r\n    background-color: ${(props) => props.theme.pigGamePage.preloader_bg};\r\n    height: 1em;\r\n    width: 1em;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nS.Container = styled.div`\r\n  min-height: calc(100vh - var(--nav-height));\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  perspective: 1000px;\r\n  background: ${(props) => props.theme.pigGamePage.preloader_bg};\r\n`;\r\n\r\nS.Dice = styled.div`\r\n  font-size: clamp(0.7rem, 1.4vw, 1.4rem);\r\n  height: 10em;\r\n  width: 10em;\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  animation: rotate 3s infinite;\r\n\r\n  @keyframes rotate {\r\n    100% {\r\n      transform: rotateY(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nS.Face_front = styled.div`\r\n  ${face}\r\n  font-size: clamp(0.7rem, 1.4vw, 1.4rem);\r\n  transform: translateZ(5em);\r\n\r\n  & > div {\r\n    top: 45%;\r\n    left: 45%;\r\n  }\r\n`;\r\nS.Face_left = styled.div`\r\n  ${face}\r\n  font-size: clamp(0.7rem, 1.4vw, 1.4rem);\r\n  transform: rotateY(270deg) translateX(-5em);\r\n  transform-origin: center left;\r\n\r\n  & > div:nth-child(1) {\r\n    top: 10%;\r\n    left: 10%;\r\n  }\r\n  & > div:nth-child(2) {\r\n    top: 45%;\r\n    left: 45%;\r\n  }\r\n  & > div:nth-child(3) {\r\n    bottom: 10%;\r\n    right: 10%;\r\n  }\r\n`;\r\nS.Face_right = styled.div`\r\n  ${face}\r\n  font-size: clamp(0.7rem, 1.4vw, 1.4rem);\r\n  transform: rotateY(-270deg) translateX(5em);\r\n  transform-origin: top right;\r\n  & > div:nth-child(1) {\r\n    top: 10%;\r\n    left: 10%;\r\n  }\r\n  & > div:nth-child(2) {\r\n    top: 45%;\r\n    left: 45%;\r\n  }\r\n  & > div:nth-child(3) {\r\n    top: 10%;\r\n    right: 10%;\r\n  }\r\n  & > div:nth-child(4) {\r\n    bottom: 10%;\r\n    left: 10%;\r\n  }\r\n  & > div:nth-child(5) {\r\n    bottom: 10%;\r\n    right: 10%;\r\n  }\r\n`;\r\nS.Face_back = styled.div`\r\n  ${face}\r\n  font-size: clamp(0.7rem, 1.4vw, 1.4rem);\r\n  transform: translateZ(-5em) rotateY(180deg);\r\n\r\n  & > div:nth-child(1) {\r\n    top: 10%;\r\n    left: 10%;\r\n  }\r\n\r\n  & > div:nth-child(2) {\r\n    bottom: 10%;\r\n    right: 10%;\r\n  }\r\n`;\r\n\r\nexport default S;\r\n","import { firestore } from \"../firebase.utils\";\r\n\r\nexport const getPigGameState = async () => {\r\n  const docRef = firestore.collection(\"pigGame\").doc(\"game01\");\r\n  const docSnapShot = await docRef.get();\r\n  if (docSnapShot.exists) {\r\n    console.log(\"docSnapShot\", docSnapShot.data());\r\n    return docSnapShot.data();\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getPigGamePlayer2State = async () => {\r\n  const docRef = firestore.collection(\"pigGame\").doc(\"player2\");\r\n  const docSnapshot = await docRef.get();\r\n  if (docSnapshot.exists) {\r\n    console.log(\"docSnapshot player2\", docSnapshot.data());\r\n    return docSnapshot.data();\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\n// export const getMatchedUserArray = async (email, password) => {\r\n//   // 1. Look if the email exists in firestore\r\n//   const collectionRef = firestore.collection(\"user\");\r\n//   const collectionSnapshot = await collectionRef.get();\r\n//   const usersDocs = collectionSnapshot.docs;\r\n\r\n//   const targetUserArray = usersDocs.filter((userDoc, index) => {\r\n//     return userDoc.data().email === email;\r\n//   });\r\n\r\n//   return targetUserArray;\r\n// };\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectPigGameReducer = (state) => state.pigGame;\r\n\r\nexport const selectDiceNumber = createSelector(\r\n  [selectPigGameReducer],\r\n  (pigGame) => pigGame.diceNumber\r\n);\r\n\r\nexport const selectActivePlayer = createSelector(\r\n  [selectPigGameReducer],\r\n  (pigGame) => pigGame.activePlayer\r\n);\r\n\r\nexport const selectPlayer1Obj = createSelector(\r\n  [selectPigGameReducer],\r\n  (pigGame) => pigGame.player1\r\n);\r\n\r\nexport const selectPlayer2Obj = createSelector(\r\n  [selectPigGameReducer],\r\n  (pigGame) => pigGame.player2\r\n);\r\n\r\nexport const selectWinner = createSelector(\r\n  [selectPigGameReducer],\r\n  (pigGame) => pigGame.winner\r\n);\r\n\r\nexport const selectFinalScore = createSelector(\r\n  [selectPigGameReducer],\r\n  (pigGame) => pigGame.finalScore\r\n);\r\n\r\nexport const selectIsLoading = createSelector(\r\n  [selectPigGameReducer],\r\n  (pigGame) => pigGame.isLoading\r\n);\r\n\r\n// export const selectPlayer2UserInfo = createSelector(\r\n//   [selectPigGameReducer],\r\n//   (pigGame_P) => pigGame_P.player2UserInfo\r\n// );\r\n\r\nexport const selectStrikes = createSelector(\r\n  [selectPigGameReducer],\r\n  (pigGame) => pigGame.strikes\r\n);\r\n","import styled, { css, keyframes } from \"styled-components\";\r\n\r\nconst S = {};\r\n\r\n// =============== CSS ================\r\nconst panelStyles = css`\r\n  position: relative;\r\n  height: 100%;\r\n  width: 50%;\r\n  padding: 5% 0;\r\n  text-align: center;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  touch-action: manipulation;\r\n\r\n  background: ${(props) => props.theme.pigGamePage.panel_bg};\r\n\r\n  &.active {\r\n    background: ${(props) => props.theme.pigGamePage.activePanel_bg};\r\n  }\r\n\r\n  &.active .player-name {\r\n    &:after {\r\n      content: \"\";\r\n      display: block;\r\n      position: absolute;\r\n      right: -20%;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      border-radius: 100%;\r\n\r\n      font-size: clamp(1.2rem, 2vw, 2rem);\r\n      --size: 0.4em;\r\n      width: var(--size);\r\n      height: var(--size);\r\n      background: ${(props) => props.theme.pigGamePage.dot_color};\r\n    }\r\n  }\r\n`;\r\n\r\nconst btnStyles = css`\r\n  border: 0;\r\n  background: 0;\r\n  position: absolute;\r\n  left: 50%;\r\n  &:hover {\r\n    color: red;\r\n  }\r\n`;\r\n\r\nconst signInOutBtnStyles = css`\r\n  font-size: clamp(0.8rem, 1vw, 1rem);\r\n  background: ${(props) => props.theme.pigGamePage.playerLogInBtn_primary};\r\n\r\n  padding: 0.3em 0.6em;\r\n  color: ${(props) => props.theme.pigGamePage.PlayerLogInBtn_secondary};\r\n  border: 1px solid\r\n    ${(props) => props.theme.pigGamePage.PlayerLogInBtn_secondary};\r\n  border-radius: 20px;\r\n\r\n  margin-right: 0.5em;\r\n`;\r\n\r\nconst strikesStyles = css`\r\n  font-size: clamp(0.8rem, 1.5vw, 1.5rem);\r\n  position: absolute;\r\n  font-family: \"Press Start 2P\", cursive;\r\n`;\r\n\r\nconst strikeAnimation = (rotateDeg) => keyframes`\r\n  from {\r\n    transform: scale(.4) rotate(${rotateDeg}deg);\r\n  }\r\n  to {\r\n    transform: scale(1) rotate(${rotateDeg}deg);\r\n  }\r\n`;\r\n\r\nS.PigGameContainer = styled.div`\r\n  background: linear-gradient(rgba(62, 20, 20, 0.4), rgba(62, 20, 20, 0.4)),\r\n    url(\"/images/assets/thePigGame/back.jpg\") !important;\r\n  background-size: cover !important;\r\n  background-position: center !important;\r\n\r\n  position: relative;\r\n\r\n  // display: grid;\r\n  // place-items: center;\r\n\r\n  user-select: none;\r\n\r\n  touch-action: manipulation;\r\n`;\r\n\r\n// =================== Modals Container ======================\r\nS.ModalsContainer = styled.div`\r\n  position: absolute;\r\n  right: 7%;\r\n  top: 10%;\r\n`;\r\n\r\n// ================ Player 2 sign in + out button ================\r\nS.Player2SignInBtn = styled.button`\r\n  ${signInOutBtnStyles}\r\n`;\r\n\r\nS.Player2SignOutBtn = styled.button`\r\n  ${signInOutBtnStyles}\r\n`;\r\n\r\n// ================ Information icon ================\r\nS.InfoBtn = styled.button`\r\n  font-size: clamp(0.8rem, 1vw, 1rem);\r\n  width: 2em;\r\n  height: 2em;\r\n  background: ${(props) => props.theme.pigGamePage.playerLogInBtn_primary};\r\n  color: ${(props) => props.theme.pigGamePage.PlayerLogInBtn_secondary};\r\n  border: 1px solid\r\n    ${(props) => props.theme.pigGamePage.PlayerLogInBtn_secondary};\r\n  border-radius: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nS.InfoIcon = styled.i`\r\n  font-size: 1em;\r\n`;\r\n\r\nS.playerIcon = styled.i`\r\n  font-size: 1em;\r\n`;\r\n\r\nS.GameConsoleContainer = styled.div`\r\n  width: 100vw;\r\n  max-width: 1200px;\r\n  height: 60vh;\r\n  background: white;\r\n\r\n  // font-family: Lato;\r\n\r\n  display: flex;\r\n\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  touch-action: manipulation;\r\n`;\r\n\r\nS.PlayerOnePanel = styled.div`\r\n  ${panelStyles}\r\n`;\r\nS.PlayerTwoPanel = styled.div`\r\n  ${panelStyles}\r\n`;\r\n\r\nS.StrikeIcon = styled.i`\r\n  font-size: 1.3em;\r\n  color: red;\r\n`;\r\n\r\n/* ================= Player 1 Strikes effect ================= */\r\nS.Player1Strikes = styled.h2`\r\n  ${strikesStyles}\r\n  top: 30%;\r\n  left: 15%;\r\n  animation: ${(props) => strikeAnimation(-22)} 200ms forwards;\r\n`;\r\n\r\n/* ================= Player 2 Strikes effect ================= */\r\nS.Player2Strikes = styled.h2`\r\n  ${strikesStyles}\r\n  top: 30%;\r\n  right: 15%;\r\n  animation: ${(props) => strikeAnimation(22)} 200ms forwards;\r\n`;\r\n\r\n// ================= PlayerInfoWrapper =================\r\n\r\nS.PlayerInfoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n\r\n  border-radius: 200px;\r\n`;\r\n\r\nS.PlayerPic = styled.div`\r\n  font-size: clamp(1.4rem, 2.3vw, 2.3rem);\r\n  width: 1em;\r\n  height: 1em;\r\n  border-radius: 100%;\r\n  background: ${(props) => `url(${props.imgsrc})`};\r\n  background-position: center;\r\n  background-size: cover;\r\n  margin-right: 0.4em;\r\n  cursor: pointer;\r\n`;\r\nS.PlayerName = styled.h2`\r\n  position: relative;\r\n  display: inline-block;\r\n  font-weight: 100;\r\n\r\n  font-size: ${(props) => `clamp(${props.fontSize}rem, 2vw, 2rem);`}\r\n\r\n  letter-spacing: 2px;\r\n\r\n  transform: translateX(-6%);\r\n\r\n  &.active {\r\n    font-weight: 300;\r\n  }\r\n`;\r\n\r\n// ================== Panel Common =====================\r\n\r\nS.TotalScore = styled.h2`\r\n  font-weight: 200;\r\n  font-size: clamp(2rem, 4vw, 4rem);\r\n  color: ${(props) => props.theme.pigGamePage.totalScore};\r\n`;\r\nS.CurrentScoreContainer = styled.div`\r\n  background: ${(props) => props.theme.pigGamePage.current_container};\r\n  display: inline-block;\r\n  font-size: clamp(0.7rem, 1.2vw, 1.2rem);\r\n  padding: 1em 1.6em;\r\n`;\r\n\r\nS.CurrentSpan = styled.span`\r\n  font-size: clamp(0.5rem, 0.7vw, 0.7rem);\r\n`;\r\n\r\nS.CurrentScore = styled.h3`\r\n  font-size: clamp(0.7rem, 1.2vw, 1.2rem);\r\n  color: white;\r\n`;\r\n\r\n// ================== Btns =====================\r\nS.NewGameBtn = styled.button`\r\n  ${btnStyles}\r\n  top: 60px;\r\n  transition: all 500ms;\r\n  transform: translateX(-45%);\r\n  font-size: clamp(1rem, 1.8vw, 1.6rem);\r\n`;\r\n\r\nS.RollDiceBtn = styled.button`\r\n  ${btnStyles}\r\n  transform: translateX(-51%);\r\n  top: 65%;\r\n  font-size: clamp(0.9rem, 1.2vw, 1.2rem);\r\n`;\r\n\r\nS.HoldBtn = styled.button`\r\n  ${btnStyles}\r\n  transform: translateX(-51%);\r\n  top: 75%;\r\n  font-size: clamp(0.9rem, 1.2vw, 1.2rem);\r\n`;\r\n\r\n// ================== Others =====================\r\n\r\nS.CrownLeft = styled.div`\r\n  position: absolute;\r\n  top: 4%;\r\n  left: 4%;\r\n  animation: firework 1s forwards;\r\n\r\n  & svg {\r\n    font-size: clamp(1.4rem, 2.5vw, 2.5rem);\r\n  }\r\n\r\n  @keyframes firework {\r\n    from {\r\n      transform: scale(0);\r\n    }\r\n    to {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n`;\r\n\r\nS.CrownRight = styled.div`\r\n  position: absolute;\r\n  top: 4%;\r\n  right: 4%;\r\n  animation: firework 1s forwards;\r\n\r\n  & svg {\r\n    font-size: clamp(1.4rem, 2.5vw, 2.5rem);\r\n  }\r\n\r\n  @keyframes firework {\r\n    from {\r\n      transform: scale(0);\r\n    }\r\n    to {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n`;\r\n\r\nS.TargetInput = styled.input`\r\n  position: absolute;\r\n  font-size: clamp(0.7rem, 1.5vw, 1.3rem);\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  top: 85%;\r\n  padding: 0.2em 0.5em;\r\n  width: 8em;\r\n  border: 1px solid ${(props) => props.theme.pigGamePage.targetInput_border};\r\n\r\n  text-align: center;\r\n\r\n  &::-webkit-outer-spin-button,\r\n  &::-webkit-inner-spin-button {\r\n    appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  -moz-appearance: textfield;\r\n`;\r\n\r\nS.Dice = styled.img`\r\n  position: absolute;\r\n  top: 40%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  font-size: clamp(0.7rem, 1.5vw, 1.3rem);\r\n  --size: 5em;\r\n  width: var(--size);\r\n  height: var(--size);\r\n  box-shadow: 0px 10px 60px rgba(0, 0, 0, 0.1);\r\n\r\n  cursor: grab;\r\n\r\n  &:active {\r\n    transform: scale(1.4) translateX(-35%);\r\n    box-shadow: 0px 15px 12px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport default S;\r\n","export const renderProfilePicture = (photoURL) => {\r\n  // User logged in\r\n  // IF user has setted the picture\r\n  return photoURL !== null\r\n    ? photoURL\r\n    : // Otherwise we provide him a default picture\r\n      \"/images/assets/userProfilePictures/default.png\";\r\n\r\n  // User hasn't logged in\r\n  // else {\r\n  //   return null;\r\n  // }\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectPigGamePlayer2Reducer = (state) => state.pigGamePlayer2;\r\n\r\nexport const selectPlayer2DisplayName = createSelector(\r\n  [selectPigGamePlayer2Reducer],\r\n  (pigGamePlayer2) => pigGamePlayer2.displayName\r\n);\r\n\r\nexport const selectPlayer2PhotoURL = createSelector(\r\n  [selectPigGamePlayer2Reducer],\r\n  (pigGamePlayer2) => pigGamePlayer2.photoURL\r\n);\r\n\r\nexport const selectIsLogged = createSelector(\r\n  [selectPigGamePlayer2Reducer],\r\n  (pigGamePlayer2) => pigGamePlayer2.isLogged\r\n);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectAuth = (state) => state.auth;\r\n\r\nexport const selectCurrentUser = createSelector(\r\n  [selectAuth],\r\n  (authReducer) => authReducer.currentUser\r\n);\r\n\r\n// export const selectIsUserLogged = createSelector(\r\n//   [selectAuth],\r\n//   (authReducer) => authReducer.isLogged\r\n// );\r\n\r\nexport const selectSignUpAlerts = createSelector(\r\n  [selectAuth],\r\n  (authReducer) => authReducer.signUpAlert\r\n);\r\n\r\nexport const selectLogInAlerts = createSelector(\r\n  [selectAuth],\r\n  (authReducer) => authReducer.logInAlert\r\n);\r\n","import React from \"react\";\r\nimport S from \"./pigGamePage.style\";\r\n\r\n// import { displayNameLengthFilter } from \"../../utils/dataFilter\";\r\nimport { renderProfilePicture } from \"../../utils/conditional\";\r\nimport { playerNameFontSize } from \"./pigGameUtils\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  selectDiceNumber,\r\n  selectActivePlayer,\r\n  selectPlayer1Obj,\r\n  selectPlayer2Obj,\r\n  selectWinner,\r\n  selectFinalScore,\r\n  selectStrikes,\r\n} from \"../../redux/pigGame/pigGame.selectors\";\r\nimport {\r\n  selectPlayer2DisplayName,\r\n  selectPlayer2PhotoURL,\r\n  selectIsLogged,\r\n} from \"../../redux/pigGamePlayer2/pigGamePlayer2.selectors\";\r\nimport {\r\n  toggleSignInModal,\r\n  toggleInfoModal,\r\n} from \"../../redux/pigGameModals/pigGameModals.actions\";\r\nimport {\r\n  selectCurrentUser,\r\n  // selectIsUserLogged,\r\n} from \"../../redux/Auth/auth.selectors\";\r\nimport {\r\n  rollDice,\r\n  holdDice,\r\n  startNewGame,\r\n  changeFinalScore,\r\n} from \"../../redux/pigGame/pigGame.actions\";\r\nimport { signOutStart } from \"../../redux/pigGamePlayer2/pigGamePlayer2.actions\";\r\n\r\n// import Player2SignInModal from \"./Components/player2SignInModal.component\";\r\n// import InfoModal from \"./Components/infoModal.component\";\r\n\r\nconst PigGamePage = ({\r\n  diceNumber,\r\n  rollDice,\r\n  holdDice,\r\n  startNewGame,\r\n  activePlayer,\r\n  selectPlayer1Obj,\r\n  selectPlayer2Obj,\r\n  selectWinner,\r\n  finalScore,\r\n  changeFinalScore,\r\n  selectCurrentUser,\r\n  toggleSignInModal,\r\n  displayName,\r\n  photoURL,\r\n  toggleInfoModal,\r\n  strikesNum,\r\n  signOutStart,\r\n  isPlayer2Logged,\r\n  isMainUserLogged,\r\n}) => {\r\n  return (\r\n    <S.PigGameContainer className=\"PigGame-Page gs-page \">\r\n      <style>\r\n        @import\r\n        url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');\r\n      </style>\r\n      {/* ================= Player TWO Sign In BTN and MODAL ================= */}\r\n      {/* <Player2SignInModal /> */}\r\n      {/* <InfoModal /> */}\r\n      <S.ModalsContainer>\r\n        {isPlayer2Logged ? (\r\n          <S.Player2SignOutBtn onClick={signOutStart}>\r\n            <S.playerIcon className=\"iconfont icon-player\" />\r\n            Player2 Log Out\r\n          </S.Player2SignOutBtn>\r\n        ) : (\r\n          <S.Player2SignInBtn onClick={toggleSignInModal}>\r\n            <S.playerIcon className=\"iconfont icon-player\" />\r\n            Player2 Log In\r\n          </S.Player2SignInBtn>\r\n        )}\r\n        <S.InfoBtn onClick={toggleInfoModal}>\r\n          <S.InfoIcon className=\"iconfont icon-FontAwesomeinfo\" />\r\n        </S.InfoBtn>\r\n      </S.ModalsContainer>\r\n\r\n      <S.GameConsoleContainer className=\"game-console-container\">\r\n        {/* ================= Player One Panel ================= */}\r\n        <S.PlayerOnePanel className={activePlayer === 1 && \"active\"}>\r\n          {/* ================= Player 1 Strikes effect ================= */}\r\n          {strikesNum !== 0 && activePlayer === 1 && (\r\n            <S.Player1Strikes>\r\n              {strikesNum} STRIKES\r\n              <S.StrikeIcon className=\"iconfont icon-dice\" />\r\n            </S.Player1Strikes>\r\n          )}\r\n          {/* ================= Player One Info Container ================= */}\r\n          <S.PlayerInfoContainer>\r\n            <S.PlayerPic\r\n            // imgsrc={\r\n            //   isMainUserLogged\r\n            //     ? renderProfilePicture(selectCurrentUser.photoURL)\r\n            //     : null\r\n            // }\r\n            ></S.PlayerPic>\r\n            {/* <S.PlayerName\r\n              className={`${activePlayer === 1 && \"active\"} player-name`}\r\n              fontSize={\r\n                isMainUserLogged\r\n                  ? playerNameFontSize(selectCurrentUser.displayName.length)\r\n                  : 1\r\n              }\r\n            >\r\n              {isMainUserLogged\r\n                ? displayNameLengthFilter(selectCurrentUser.displayName, 8)\r\n                : \"Player 1\"}\r\n            </S.PlayerName> */}\r\n          </S.PlayerInfoContainer>\r\n          {selectWinner === \"player1\" && (\r\n            <S.CrownLeft className=\"fireworks\">\r\n              <svg className=\"icon\" aria-hidden=\"true\">\r\n                <use xlinkHref=\"#icon-crown\"></use>\r\n              </svg>\r\n            </S.CrownLeft>\r\n          )}\r\n          <S.TotalScore>{selectPlayer1Obj.totalScore}</S.TotalScore>\r\n          <S.CurrentScoreContainer>\r\n            <S.CurrentSpan>CURRENT</S.CurrentSpan>\r\n            <S.CurrentScore id=\"currentScore-player1\">\r\n              {selectPlayer1Obj.currentScore}\r\n            </S.CurrentScore>\r\n          </S.CurrentScoreContainer>\r\n        </S.PlayerOnePanel>\r\n        {/* ================= Player Two Panel ================= */}\r\n        <S.PlayerTwoPanel className={activePlayer === 2 && \"active\"}>\r\n          {/* ================= Player 2 Strikes effect ================= */}\r\n          {strikesNum !== 0 && activePlayer === 2 && (\r\n            <S.Player2Strikes>\r\n              {strikesNum} STRIKES\r\n              <S.StrikeIcon className=\"iconfont icon-dice\" />\r\n            </S.Player2Strikes>\r\n          )}\r\n          {/* ================= Player Two Info Container ================= */}\r\n          <S.PlayerInfoContainer>\r\n            <S.PlayerPic\r\n              imgsrc={isPlayer2Logged ? renderProfilePicture(photoURL) : null}\r\n            ></S.PlayerPic>\r\n            {/* <S.PlayerName\r\n              className={`${activePlayer === 2 && \"active\"} player-name`}\r\n              fontSize={\r\n                isPlayer2Logged ? playerNameFontSize(displayName.length) : 1\r\n              }\r\n            >\r\n              {isPlayer2Logged\r\n                ? displayNameLengthFilter(displayName, 12)\r\n                : \"Player 2\"}\r\n            </S.PlayerName> */}\r\n          </S.PlayerInfoContainer>\r\n          {selectWinner === \"player2\" && (\r\n            <S.CrownRight className=\"fireworks\">\r\n              <svg className=\"icon\" aria-hidden=\"true\">\r\n                <use xlinkHref=\"#icon-crown\"></use>\r\n              </svg>\r\n            </S.CrownRight>\r\n          )}\r\n          <S.TotalScore>{selectPlayer2Obj.totalScore}</S.TotalScore>\r\n          <S.CurrentScoreContainer>\r\n            <S.CurrentSpan>CURRENT</S.CurrentSpan>\r\n            <S.CurrentScore id=\"currentScore-player2\">\r\n              {selectPlayer2Obj.currentScore}\r\n            </S.CurrentScore>\r\n          </S.CurrentScoreContainer>\r\n        </S.PlayerTwoPanel>\r\n        {/* ================= Controls ================= */}\r\n        <S.NewGameBtn onClick={startNewGame}>NEW GAME</S.NewGameBtn>\r\n        <S.RollDiceBtn\r\n          onClick={() => {\r\n            rollDice();\r\n          }}\r\n        >\r\n          ROLL DICE\r\n        </S.RollDiceBtn>\r\n        <S.HoldBtn onClick={holdDice}>HOLD</S.HoldBtn>\r\n        <S.TargetInput\r\n          type=\"number\"\r\n          placeholder=\"FINAL SCORE\"\r\n          value={finalScore}\r\n          onChange={(event) => {\r\n            const value = parseInt(event.target.value, 10);\r\n            changeFinalScore(value);\r\n          }}\r\n        />\r\n        {diceNumber !== null && (\r\n          <S.Dice\r\n            src={`/images/assets/thePigGame/dice-${diceNumber}.png`}\r\n            onClick={rollDice}\r\n          />\r\n        )}\r\n      </S.GameConsoleContainer>\r\n    </S.PigGameContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  diceNumber: selectDiceNumber,\r\n  activePlayer: selectActivePlayer,\r\n  selectPlayer1Obj: selectPlayer1Obj,\r\n  selectPlayer2Obj: selectPlayer2Obj,\r\n  selectWinner: selectWinner,\r\n  finalScore: selectFinalScore,\r\n  selectCurrentUser: selectCurrentUser,\r\n  isPlayer2Logged: selectIsLogged,\r\n  strikesNum: selectStrikes,\r\n  displayName: selectPlayer2DisplayName,\r\n  photoURL: selectPlayer2PhotoURL,\r\n  // isMainUserLogged: selectIsUserLogged,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rollDice: () => dispatch(rollDice()),\r\n  holdDice: () => dispatch(holdDice()),\r\n  startNewGame: () => dispatch(startNewGame()),\r\n  changeFinalScore: (newFinalScore) =>\r\n    dispatch(changeFinalScore(newFinalScore)),\r\n  toggleSignInModal: () => dispatch(toggleSignInModal()),\r\n  toggleInfoModal: () => dispatch(toggleInfoModal()),\r\n  signOutStart: () => dispatch(signOutStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PigGamePage);\r\n","import React, { useEffect } from \"react\";\r\nimport S from \"./pigGamePageWithSpinner.style\";\r\nimport \"./pigGamePageWithSpinner.style.scss\";\r\n\r\nimport {\r\n  getPigGameState,\r\n  getPigGamePlayer2State,\r\n} from \"../../firebase/firestore/getData\";\r\n\r\n// import { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectIsLoading } from \"../../redux/pigGame/pigGame.selectors\";\r\nimport {\r\n  loadGameState,\r\n  loadingIsFinished,\r\n  setIsLoadingToTrue,\r\n  startNewGame,\r\n} from \"../../redux/pigGame/pigGame.actions\";\r\nimport { loadPlayer2State } from \"../../redux/pigGamePlayer2/pigGamePlayer2.actions\";\r\n\r\nimport PigGamePage from \"./pigGamePage.component\";\r\n\r\nconst PigGamePageWithSpinner = ({\r\n  isLoading,\r\n  loadGameState,\r\n  loadingIsFinished,\r\n  startNewGame,\r\n  loadPlayer2State,\r\n}) => {\r\n  useEffect(() => {\r\n    // Load Game State to pigGameReducer\r\n    async function loadGame() {\r\n      const gameState = await getPigGameState();\r\n\r\n      if (gameState !== null) {\r\n        loadGameState(gameState);\r\n      } else {\r\n        startNewGame();\r\n      }\r\n\r\n      // if (gamePlayer2State !== null) {\r\n      const gamePlayer2State = await getPigGamePlayer2State();\r\n      loadPlayer2State(gamePlayer2State);\r\n\r\n      // }\r\n\r\n      loadingIsFinished();\r\n    }\r\n    if (isLoading !== false) loadGame();\r\n\r\n    return () => {\r\n      //   const { isLoading, setIsLoadingToTrue } = this.props;\r\n      setIsLoadingToTrue();\r\n      console.log(\"PigGameWithSpinner Unmounted: \", isLoading);\r\n    };\r\n  }, [\r\n    isLoading,\r\n    loadGameState,\r\n    loadPlayer2State,\r\n    loadingIsFinished,\r\n    startNewGame,\r\n  ]);\r\n\r\n  return isLoading ? (\r\n    <S.Container>\r\n      <S.Dice>\r\n        <S.Face_front>\r\n          <div></div>\r\n        </S.Face_front>\r\n        <S.Face_left>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </S.Face_left>\r\n        <S.Face_right>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </S.Face_right>\r\n        <S.Face_back>\r\n          <div></div>\r\n          <div></div>\r\n        </S.Face_back>\r\n      </S.Dice>\r\n    </S.Container>\r\n  ) : (\r\n    <PigGamePage />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsLoading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadGameState: (gameState) => dispatch(loadGameState(gameState)),\r\n  loadPlayer2State: (player2State) => dispatch(loadPlayer2State(player2State)),\r\n  loadingIsFinished: () => dispatch(loadingIsFinished()),\r\n  setIsLoadingToTrue: () => dispatch(setIsLoadingToTrue()),\r\n  startNewGame: () => dispatch(startNewGame()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PigGamePageWithSpinner);\r\n"],"sourceRoot":""}
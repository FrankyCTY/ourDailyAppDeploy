{"version":3,"sources":["Pages/mainPage/mainPage.style.jsx","Components/MainPageAccessAppWrapper/MainPageAccessAppWrapper.style.jsx","Components/MainPageAccessAppBtn/MainPageAccessAppBtn.style.jsx","Components/MainPageAccessAppBtn/MainPageAccessAppBtn.component.jsx","Components/RenderPropsComs/Loader/Loader.renderPropCom.jsx","Components/Molecules/Spinners/RippleSpinner/RippleSpinner.style.jsx","Components/Molecules/Spinners/RippleSpinner/RippleSpinner.component.jsx","Components/MainPageAccessAppWrapper/MainPageAccessAppWrapper.component.jsx","Components/ImageFrames/ImageFrame/ImageFrame.style.jsx","Components/ImageFrames/ImageFrame/ImageFrame.component.jsx","Pages/mainPage/mainPage.component.jsx"],"names":["S","appear","keyframes","MainPageContainer","styled","div","ImageFrameWrapper","username","h2","props","theme","mainPage","AccessAppBtnWrapper","MainPageAccessAppWrapper","ApplicationItemContainer","stagger","Image","img","AppLinkText","span","appAccessBtnText","MainPageAccessAppBtn","app","index","name","route","imageUrl","border","to","className","src","loading","Loader","SpinnerComponent","children","isLoading","load","SpinnerOverlay","SpinnerContainer","spinner_mainPageAccessAppWrapper","RippleSpinner","accessAppBtns","useSelector","state","map","key","ImageFrame","styled_halo","Img","EditProfileText","editProfileText","ExtraImgSpan","halo","withExtraText","restProps","Fragment","defaultProps","React","memo","dispatch","useDispatch","router","useRouter","userDetails","auth_P","user","userAvatar","useEffect","fetchAccessAppBtnsStart","_arrayBufferToBase64","onClick","push"],"mappings":"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","file":"static/js/12.05b7a66c.chunk.js","sourcesContent":["import styled, { keyframes } from \"styled-components\";\r\n\r\nconst S = {};\r\n\r\n// Animation\r\nconst appear = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\n// ==================== Container ====================\r\n\r\nS.MainPageContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  overflow: hidden;\r\n\r\n  font-size: clamp(0.8rem, 1.7vw, 1.7rem);\r\n\r\n  display: grid;\r\n  grid-template-rows: minmax(1em, 18em) minmax(1em, 1fr);\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n\r\n  @media screen and (min-width: 680px) {\r\n    grid-template-rows: minmax(1em, 15em) minmax(1em, 1fr);\r\n  }\r\n\r\n  grid-template-areas:\r\n    \". imageFrame .\"\r\n    \"accessAppWrapperBtn accessAppWrapperBtn accessAppWrapperBtn\";\r\n`;\r\n\r\n// ======================= profile Pic and name ===========================\r\nS.ImageFrameWrapper = styled.div`\r\n  grid-area: imageFrame;\r\n\r\n  align-self: flex-end;\r\n\r\n  display: grid;\r\n  place-items: center;\r\n\r\n  animation: ${appear} 350ms;\r\n`;\r\n\r\nS.username = styled.h2`\r\n  color: ${(props) => props.theme.mainPage.username};\r\n  font-size: clamp(0.8rem, 1.5vw, 1.5rem);\r\n`;\r\n\r\nS.AccessAppBtnWrapper = styled.div`\r\n  grid-area: accessAppWrapperBtn;\r\n  width: 100%;\r\n\r\n  max-width: 1000px;\r\n  justify-self: center;\r\n  align-self: flex-start;\r\n\r\n  margin-top: 3em;\r\n\r\n  @media (orientation: landscape) {\r\n    margin-bottom: 2em;\r\n  }\r\n`;\r\n\r\nexport default S;\r\n","import styled from \"styled-components\";\r\n\r\nconst S = {};\r\n\r\n// ========== Container =========\r\n\r\nS.MainPageAccessAppWrapper = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0 8%;\r\n\r\n  font-size: clamp(0.7rem, 1vw, 1rem);\r\n  --btn-size: 7em;\r\n\r\n  justify-content: center;\r\n\r\n  grid-template-columns: repeat(auto-fit, var(--btn-size));\r\n  grid-auto-rows: var(--btn-size);\r\n  row-gap: 1em;\r\n  column-gap: 0.6em;\r\n`;\r\n\r\nexport default S;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst S = {};\r\n\r\n// Animation\r\nconst appear = keyframes`\r\n0% {\r\n  transform: scale(.8);\r\n  opacity: 0;\r\n}\r\n100% {\r\n  transform: scale(1);\r\n  opacity: 1;\r\n}\r\n`;\r\n\r\n// ==================== Container ====================\r\n\r\nS.ApplicationItemContainer = styled.div`\r\n  cursor: pointer;\r\n\r\n  display: grid;\r\n  place-items: center;\r\n\r\n  font-size: 0.8em;\r\n  font-weight: 700;\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  animation: 600ms ${appear} backwards ${(props) => props.stagger}s;\r\n  -webkit-perspective: 1000;\r\n  -webkit-backface-visibility: hidden;\r\n`;\r\n\r\nS.Image = styled.img`\r\n  --img-size: 5em;\r\n\r\n  border-radius: 100%;\r\n  object-fit: cover;\r\n  height: var(--img-size);\r\n  width: var(--img-size);\r\n\r\n  &:hover {\r\n    border: 1px solid white;\r\n    box-shadow: 0 0 10px rgba(255, 255, 255, 1);\r\n  }\r\n`;\r\n\r\nS.AppLinkText = styled.span`\r\n  color: ${(props) => props.theme.mainPage.appAccessBtnText};\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default S;\r\n","import React from \"react\";\r\nimport S from \"./MainPageAccessAppBtn.style\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MainPageAccessAppBtn = ({ app, index }) => {\r\n  const { name, route, imageUrl, border } = app;\r\n  return (\r\n    <Link to={`/${route}`} className={`link`}>\r\n      <S.ApplicationItemContainer\r\n        className=\"application-item\"\r\n        stagger={(index + 1) * 0.1}\r\n      >\r\n        <S.Image\r\n          src={`${imageUrl}.jpeg`}\r\n          loading=\"lazy\"\r\n          className={`${border ? \"border\" : \"\"}`}\r\n        />\r\n        <S.AppLinkText className=\"link-text\">{name}</S.AppLinkText>\r\n      </S.ApplicationItemContainer>\r\n    </Link>\r\n  );\r\n};\r\n\r\nMainPageAccessAppBtn.propTypes = {\r\n  app: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MainPageAccessAppBtn;\r\n","import React from \"react\";\r\n\r\nconst Loader = ({ SpinnerComponent, children, isLoading, ...otherProps }) => {\r\n  return isLoading ? <SpinnerComponent /> : children();\r\n};\r\n\r\nexport default Loader;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst S = {};\r\n\r\nconst load = keyframes`\r\n0% { \r\n  transform: scale(0);\r\n} \r\n100% {\r\n  transform: scale(1.0);\r\n  opacity: 0;\r\n}`;\r\n\r\n// ================ Spinner ==================\r\nS.SpinnerOverlay = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nS.SpinnerContainer = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin: 0 auto;\r\n\r\n  background-color: ${(props) =>\r\n    props.theme.mainPage.spinner_mainPageAccessAppWrapper};\r\n\r\n  border-radius: 100%;\r\n  animation: ${load} 1s infinite ease-in-out;\r\n`;\r\n\r\nexport default S;\r\n","import React from \"react\";\r\nimport S from \"./RippleSpinner.style\";\r\n\r\nconst RippleSpinner = () => {\r\n  return (\r\n    <S.SpinnerOverlay>\r\n      <S.SpinnerContainer />\r\n    </S.SpinnerOverlay>\r\n  );\r\n};\r\n\r\nexport default RippleSpinner;\r\n","import React from \"react\";\r\nimport S from \"./MainPageAccessAppWrapper.style\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport MainPageAccessAppBtn from \"../MainPageAccessAppBtn/MainPageAccessAppBtn.component\";\r\nimport Loader from \"../../Components/RenderPropsComs/Loader/Loader.renderPropCom\";\r\nimport RippleSpinner from \"../../Components/Molecules/Spinners/RippleSpinner/RippleSpinner.component\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MainPageAccessAppWrapper = () => {\r\n  const accessAppBtns = useSelector((state) => state.app.accessAppBtns);\r\n  return (\r\n    <S.MainPageAccessAppWrapper className=\"application-container\">\r\n      <Loader SpinnerComponent={RippleSpinner} isLoading={!!!accessAppBtns}>\r\n        {() =>\r\n          accessAppBtns.map((app, index) => (\r\n            <MainPageAccessAppBtn key={index} app={app} index={index} />\r\n          ))\r\n        }\r\n      </Loader>\r\n    </S.MainPageAccessAppWrapper>\r\n  );\r\n};\r\n\r\nMainPageAccessAppWrapper.propTypes = {\r\n  accessAppBtns: PropTypes.array,\r\n};\r\n\r\nexport default MainPageAccessAppWrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst S = {};\r\n\r\nS.ImageFrame = styled.div`\r\n  font-size: clamp(0.8rem, 1.5vw, 1.5rem);\r\n  --size: 10em;\r\n  width: var(--size);\r\n  height: var(--size);\r\n  border: 5px solid white;\r\n\r\n  border-radius: 100%;\r\n  background-position: center;\r\n  background-size: cover;\r\n\r\n  position: relative;\r\n\r\n  ${(props) =>\r\n    props.styled_halo && `box-shadow: 0 0 10px rgba(255, 255, 255, 1);`}\r\n\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nS.Img = styled.img`\r\n  object-fit: cover;\r\n  border-radius: 100%;\r\n\r\n  cursor: pointer;\r\n\r\n  transition: filter 250ms ease-in-out;\r\n\r\n  &:hover {\r\n    filter: blur(3px) brightness(0.5);\r\n  }\r\n  &:hover + .styled_editProfileSpan {\r\n    opacity: 1;\r\n    transform: translate(-50%, -20%);\r\n  }\r\n`;\r\n\r\nS.EditProfileText = styled.span`\r\n  position: absolute;\r\n  bottom: 5%;\r\n  left: 50%;\r\n  transform: translate(-50%, 10%);\r\n  font-size: 0.7em;\r\n  font-weight: 300;\r\n  opacity: 0;\r\n  pointer-events: none;\r\n\r\n  transition: opacity 250ms ease-in-out, transform 250ms;\r\n\r\n  color: ${(props) => props.theme.mainPage.editProfileText};\r\n`;\r\n\r\nS.ExtraImgSpan = styled.span`\r\n  color: ${(props) => props.theme.mainPage.username};\r\n  font-size: clamp(0.8rem, 1.5vw, 1.5rem);\r\n`;\r\n\r\nexport default S;\r\n","import React from \"react\";\r\nimport S from \"./ImageFrame.style\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageFrame = ({ children, src, halo, withExtraText, ...restProps }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <S.ImageFrame styled_halo={halo} {...restProps}>\r\n        <S.Img src={src} />\r\n        <S.EditProfileText className=\"styled_editProfileSpan\">\r\n          Edit Profile\r\n        </S.EditProfileText>\r\n      </S.ImageFrame>\r\n      {withExtraText && <S.ExtraImgSpan>{children}</S.ExtraImgSpan>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nImageFrame.propTypes = {\r\n  halo: PropTypes.bool,\r\n  withExtraText: PropTypes.bool,\r\n};\r\n\r\nImageFrame.defaultProps = {\r\n  withExtraText: false,\r\n  halo: false,\r\n};\r\n\r\nexport default ImageFrame;\r\n","import React, { useEffect } from \"react\";\r\nimport S from \"./mainPage.style\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAccessAppBtnsStart } from \"../../redux/app/app.actions\";\r\nimport useRouter from \"../../hooks/useRouter.hooks\";\r\n\r\nimport MainPageAccessAppWrapper from \"../../Components/MainPageAccessAppWrapper/MainPageAccessAppWrapper.component\";\r\nimport ImageFrame from \"../../Components/ImageFrames/ImageFrame/ImageFrame.component\";\r\nimport _arrayBufferToBase64 from \"../../utils/bufferArrayToBase64\";\r\n\r\nconst MainPage = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n\r\n  const userDetails = useSelector((state) => state.auth_P.user);\r\n  const userAvatar = useSelector(state => state.auth_P.userAvatar);\r\n\r\n  // ============= Life Cycle Hooks =============\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAccessAppBtnsStart());\r\n  }, [dispatch]);\r\n  return (\r\n    <S.MainPageContainer className=\"MainPage gs-page\">\r\n      <S.ImageFrameWrapper>\r\n        <ImageFrame src={`data:image/jpg;base64,${_arrayBufferToBase64(userAvatar)}`} halo={true} withExtraText={true}\r\n        onClick={() => {router.push(\"/settings\")}}\r\n        >\r\n          {userDetails.name}\r\n        </ImageFrame>\r\n      </S.ImageFrameWrapper>\r\n      <S.AccessAppBtnWrapper>\r\n        <MainPageAccessAppWrapper />\r\n      </S.AccessAppBtnWrapper>\r\n    </S.MainPageContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(MainPage);\r\n"],"sourceRoot":""}